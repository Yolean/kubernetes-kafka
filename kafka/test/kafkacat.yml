---
kind: ConfigMap
metadata:
  name: kafkacat
  namespace: test-kafka
apiVersion: v1
data:

  setup.sh: |-
    touch /tmp/testlog

    tail -f /tmp/testlog

  test.sh: |-
    exec >> /tmp/testlog
    exec 2>&1

    PC_WAIT=.2
    MAX_AGE=5

    UNIQUE="${HOSTNAME}@$(date -u -Ins)"

    echo "${UNIQUE: -41:5}:Test $UNIQUE" >> /shared/produce.tmp
    sleep $PC_WAIT
    LAST=$(tail -n 1 /shared/consumed.tmp)
    [ -z "$LAST" ] && echo "Nothing consumed" && exit 1

    LAST_TS=$(echo $LAST | awk -F';' '{print $1}')
    [ -z "$LAST_TS" ] && echo "Failed to get timestamp for message: $LAST" && exit 1
    LAST_MSG=$(echo $LAST | awk -F';' '{print $4}')
    NOW=$(date -u +%s%3N)
    DIFF_S=$((($NOW - $LAST_TS)/1000))
    DIFF_MS=$((($NOW - $LAST_TS)%1000))
    #echo "$NOW ($(date +%FT%H:%M:%S.%3N)):"
    #echo "$LAST_TS"

    if [ $DIFF_S -gt $MAX_AGE ]; then
      echo "Last message is $DIFF_S.$DIFF_MS old:"
      echo "$LAST_MSG"
      exit 10
    fi

    if [[ "$LAST_MSG" != *"$UNIQUE" ]]; then
      echo "Last message (at $LAST_TS) isn't from this test run ($UNIQUE):"
      echo "$LAST_MSG"
      exit 11
    fi

    # get info about this message
    kafkacat -Q -b $BOOTSTRAP -t test-kafkacat:0:$LAST_TS \
      -X socket.timeout.ms=600 -X session.timeout.ms=300 -X request.timeout.ms=50 -X metadata.request.timeout.ms=600
    [ $? -eq 0 ] || echo "At $(date +%FT%H:%M:%S.%3N) bootstrap broker(s) might be down"
    # but don't fail the test; producer and consumer should keep going if there are other brokers

    # We haven't asserted that the consumer works, so we'll just have to assume that it will exit if it fails

    exit 0

  quit-on-nonzero-exit.sh: |-
    exec >> /tmp/testlog
    exec 2>&1

    exit 0
---
apiVersion: batch/v1
kind: Job
metadata:
  name: topic-test-kafkacat
  namespace: test-kafka
spec:
  template:
    spec:
      containers:
      - name: topic-create
        image: solsson/kafka:native-cli@sha256:fbf29c59182fb87921c5199783d2d5796856ecbfe34a9c03eca658b3cf50f3c4
        command:
        - ./bin/kafka-topics.sh
        - --zookeeper
        -   zookeeper.kafka.svc.cluster.local:2181
        - --create
        - --if-not-exists
        - --topic
        -   test-kafkacat
        - --partitions
        -   "12"
        - --replication-factor
        -   "2"
        resources:
          limits:
            cpu: 100m
            memory: 20Mi
      restartPolicy: Never
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: kafkacat
  namespace: test-kafka
spec:
  # Note that this test sets a consumer group, but asserts assume that the tests gets its own messages
  replicas: 1
  selector:
    matchLabels:
      test-target: kafka-client-kafkacat
      test-type: readiness
  template:
    metadata:
      labels:
        test-target: kafka-client-kafkacat
        test-type: readiness
    spec:
      containers:
      - name: producer
        image: solsson/kafkacat@sha256:7a5961f861ddad53c25227511b9f36a5c13bc43296470b383be2f3e8e3a506f4
        env:
        - name: BOOTSTRAP
          value: bootstrap.kafka:9092
        - name: ACKS
          # -1 means use brokers' min.insync.replicas
          value: "-1"
        command:
        - /bin/bash
        - -cex
        - >
          echo "--- start $HOSTNAME $(date --iso-8601='ns' -u) ---" >> /shared/produce.tmp
          ;
          tail -f /shared/produce.tmp |
          kafkacat -P -b $BOOTSTRAP -t test-kafkacat -v -T -d broker -K ':' -X request.required.acks=$ACKS
          ;
        volumeMounts:
        - name: config
          mountPath: /test
        - name: shared
          mountPath: /shared
      - name: consumer
        image: solsson/kafkacat@sha256:7a5961f861ddad53c25227511b9f36a5c13bc43296470b383be2f3e8e3a506f4
        env:
        - name: BOOTSTRAP
          value: bootstrap.kafka:9092
        - name: CONSUMER_GROUP_ID
          value: test-kafkacat-group
        command:
        - /bin/bash
        - -cex
        - >
          kafkacat -b $BOOTSTRAP -G $CONSUMER_GROUP_ID test-kafkacat -o -1 -f '%T;%k:%p;%o;%s\n' -u -d broker |
          tee /shared/consumed.tmp
          ;
        volumeMounts:
        - name: config
          mountPath: /test
        - name: shared
          mountPath: /shared
      - name: testcase
        image: solsson/kafkacat@sha256:7a5961f861ddad53c25227511b9f36a5c13bc43296470b383be2f3e8e3a506f4
        env:
        - name: BOOTSTRAP
          value: bootstrap.kafka:9092
        command:
        - /bin/bash
        - -e
        - /test/setup.sh
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -e
            - /test/test.sh
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -e
            - /test/quit-on-nonzero-exit.sh
        volumeMounts:
        - name: config
          mountPath: /test
        - name: shared
          mountPath: /shared
      volumes:
      - name: config
        configMap:
          name: kafkacat
      - name: shared
        emptyDir: {}
